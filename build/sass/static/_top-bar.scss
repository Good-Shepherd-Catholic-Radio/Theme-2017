@keyframes gscr-header-button-flash {
	0% {
		color: $quaternary-color;
	}
	89% {
		color: $quaternary-color;
	}
	90% {
		color: lighten($quaternary-color, 20%);
	}
	91% {
		color: $quaternary-color;
	}
	92% {
		color: lighten($quaternary-color, 20%);
	}
	93% {
		color: $quaternary-color;
	}
	100% {
		color: $quaternary-color;
	}
}

.top-bar {

	font-weight: 600;
	position: relative;

	@media #{$medium-up} {

		padding: 1.5rem 1rem;

	}

	// Phablet Landscape and Portrait iPad Fix
	@media #{$phablet-landscape}, #{$ipad-portrait} {

		.show-for-small-only {
			display: inline-block !important;
		}

		.hide-for-small-only {
			display: none;
		}

	}

	.top-bar-title {

		//overflow: hidden;
		overflow: visible;
		position: relative;

		font-family: $header-font-family;
		padding-top: 0;

		a {

			padding: $menu-item-padding;

		}
		
		.top-bar-logo {
			
			position: absolute;
			display: none;
			
			@media #{$medium-up} {
				margin-top: -1em;
				margin-left: 1em;
			}
			
			a {
			
				svg {

					height: 2.5em;
					width: auto;

					path {
						@if lightness( $primary-color ) < 65% {
							fill: #fff;
						}
						else {
							fill: $body-font-color;
						}
					}

				}
				
				&:hover {
					
					svg {
						path{
							@if lightness( $primary-color ) < 65% {
								fill: scale-color( #fff, $lightness: -25% );
							}
							else {
								fill: scale-color( $body-font-color, $lightness: 25% );
							}
						}
					}
					
				}
				
			}
			
		}

	}

	.stream-container {

		min-width: 500px;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		height: 3em;
		
		margin-top: 0.25em;
		
		@media #{$medium-up} {
			margin-top: -0.75em;
		}

		.jp-audio-stream {

			background: transparent;
			padding: 0;
			width: auto;
			border-top: none;

			.fa {
				color: $quaternary-color;
			}
			
			@media #{$small-only} {
				
				.jp-controls, .jp-volume-controls {
					padding: 0;
				}
				
			}

			.jp-play {

				.play-icon {
					animation: gscr-header-button-flash 10s infinite;
				}

			}

			.jp-details {

				margin-left: 4%;
				color: $titlebar-icon-color;

				.jp-title {
					transform: translateY(20%);
				}

			}

			.jp-mute {

				.mute-icon {

					color: $titlebar-icon-color;

				}

			}

			&.jp-state-muted {

				.jp-mute {

					.mute-icon {

						color: $quaternary-color;

					}

				}

			}

			.jp-volume-controls {

				.volume-bar-container {

					.jp-volume-bar {
						background-color: $titlebar-icon-color;
						height: 0.65em;
					}

					.jp-volume-bar-value {
						background-color: $quaternary-color;
					}

				}

			}

			.jp-volume-max {

				.volume-max-icon {

					color: $titlebar-icon-color;

				}

			}

			.jp-volume-max:focus {

				.volume-max-icon {

					color: $quaternary-color;

				}

			}

		}

	}

	.nav-menu {
		position: absolute;
		right: 2%;
		top: 50%;
		transform: translate( -2%, -50% );
		-webkit-transform: translate( -2%, -50% );
		-o-transform: translate( -2%, -50% );
		-ms-transform: translate( -2%, -50% );
		z-index: 2;

		.fa {
			margin-top: -0.5em; 
		}

		> .dropdown.menu {

			background: transparent;

			> .current-menu-item, > .current-menu-ancestor {

				> a {
					color: scale-color( $quaternary-color, $lightness: 25% );
				}

				&.is-dropdown-submenu-parent {

					> a:after {

						border-top-color: scale-color( $quaternary-color, $lightness: 25% ) !important;

					}

				}
			}

			> .is-dropdown-submenu-parent {

				> a:after {
					border-top-color: $topbar-link-color;
				}

				&:hover > a:after {

					@if lightness( darken( $topbar-background, 10% ) ) < 65% {

						border-top-color: $light-color;

					}
					@else {

						border-top-color: $dark-color;

					}

				}

				.is-dropdown-submenu-parent {

					a:after {

						@if lightness( $body-background ) < 65% {

							border-right-color: $light-color;

						}
						@else {

							border-right-color: $dark-color;

						}

					}

					// Top Level:hover
					&:hover > a:after {

						@if lightness( darken( $topbar-background, 10% ) ) < 65% {

							border-right-color: $dark-color;

						}
						@else {

							border-right-color: $light-color;

						}

					}

				}

			}

		}

		> .menu {

			// All levels
			li {

				&.is-dropdown-submenu-parent {

					> a:after {
						border-width: 4px;
						right: 10px;
					}

				}

			}

			// Top Level
			> li {

				a {
					color: $topbar-link-color;
				}

				&:hover {
					background-color: lighten( $topbar-background, 5% ) !important;
					border-radius: 0.25em;

					> a {
						@include light-or-dark-text( $topbar-background );
					}

				}

			}

			// Everything below
			> li {

				li {

					background-color: $body-background;
					text-transform: none;

					a {
						@include light-or-dark-text( $dropdownmenu-background );
					}

				}

				li:hover {
					background-color: $light-gray !important;

					> a {
						@include light-or-dark-text( $light-gray );
					}

				}

			}

			> li li.current-menu-item, > li li.current-menu-ancestor {

				background-color: darken( $light-gray, 10% );

				> a {
					@include light-or-dark-text( darken( $light-gray, 10% ) );
				}

			}

		}

	}
	
	.menu-icon-container {
		
		width: auto;
		
		@media #{$small-only} {
			margin-top: -0.25em !important;
    		margin-bottom: 0.15em !important;
		}
		
		.menu-icon-text {
			color: $titlebar-icon-color;
		}
		
		span.menu-icon {
			margin: -0.15em 0.15em 0 0.15em;
		}
		
	}

	// Holds the little rounded edges and Triangle thing for immediate children of the top-level
	@import "top-bar-menu";
	
	&.is-stuck {
		
		.top-bar-logo {
			
			display: inline-block;
			
			@media #{$small-only} {
				
				$menu-item-padding-list: str-split( inspect( $menu-item-padding ), ' ' );
				
				a {
					// The things I'll do to keep things scalable with Foundation's units
					padding-left: to-number( nth( $menu-item-padding-list, 1 ) ) / 2;
				}
				
			}
			
		}
		
		.stream-container {
			
			margin-left: 4em;
			
			@media #{$medium-up} {
				margin-left: 9em;
			}
			
		}
		
	}

}